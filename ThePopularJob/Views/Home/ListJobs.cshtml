@model ListJobsViewModel
@inject SignInManager<IdentityUser> signInManager;

@{
    ViewBag.Title = "Home Page";
}

<form asp-action="ListJobs" method="get" class="mx-auto" style="max-width:600px">
    <div class="input-group mb-3">
        <input type="text" asp-for="SearchString" class="form-control" placeholder="Search..." />
        <button class="input-group-append border-0 p-0">
            <span class="input-group-text" style="height:100%">
                <i class="fa fa-search"></i>
            </span>
        </button>
    </div>
    <div class="input-group mb-5">
        <select asp-for="SelectedCategoryId" asp-items="@(new SelectList(Model.Categories, "Id", "Name"))" class="form-control">
            <option>Filter By Category...</option>
        </select>
    </div>
</form>

<div class="text-center mb-3">
    @Model.JobsNumberForQuery jobs were found
</div>

<div>
    @foreach (var jobSummary in Model.Jobs)
    {
        <div class="card" style="margin-bottom:3em">
            <div class="card-header d-flex justify-content-between">
                <h5>@jobSummary.Job.Title</h5>
                <span style="min-width:55px">@jobSummary.TimeAgo</span>
            </div>
            <div class="card-body child-margin-1">
                @if (!string.IsNullOrEmpty(jobSummary.Job.Company))
                {
                    <div><i class="fa fa-building"></i> @jobSummary.Job.Company</div>
                }
                @if (!string.IsNullOrEmpty(jobSummary.Job.Location)
                || (!string.IsNullOrEmpty(jobSummary.Job.City) && !string.IsNullOrEmpty(jobSummary.Job.State)))
                {
                    <div><i class="fa fa-map-marker"></i> @jobSummary.Job.Location @jobSummary.Job.City, @jobSummary.Job.State</div>
                }
                @if (!string.IsNullOrEmpty(jobSummary.Job.Description))
                {
                    <div>@jobSummary.Job.Description</div>
                }
                @if (jobSummary.Job.SalaryId != 0)
                {
                    <div><i class="fa fa-usd"></i> @jobSummary.Job.SalaryRange[jobSummary.Job.SalaryId]</div>
                }
            </div>
            <div class="card-footer">
                @if (signInManager.IsSignedIn(User))
                {
                    <a class="btn btn-primary mt-2" href="@jobSummary.Job.Href" target="_blank">Apply</a>
                }
                else
                {<p>Please log in to apply</p>}
            </div>
        </div>
    }

    <div class="d-flex justify-content-between mx-auto" style="max-width:400px">
        @{ var disabledClass = Model.StartIndex >= 20 ? "" : "disabled";}

        <a class="btn btn-info @disabledClass" asp-action="ListJobs" asp-route-startIndex="@(Model.StartIndex - Model.JobsPerPage)"
           asp-route-searchString="@Model.SearchString">
            Previous
        </a>
        <span class="btn">@Model.PageNumber</span>
        <a class="btn btn-info" asp-action="ListJobs" asp-route-startIndex="@(Model.StartIndex + Model.JobsPerPage)"
           asp-route-searchString="@Model.SearchString">
            Next
        </a>
    </div>
</div>